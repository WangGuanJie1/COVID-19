webpackHotUpdate("index/screen",{

/***/ "./node_modules/countup.js/dist/countUp.min.js":
/*!*****************************************************!*\
  !*** ./node_modules/countup.js/dist/countUp.min.js ***!
  \*****************************************************/
/*! exports provided: CountUp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CountUp\", function() { return CountUp; });\nvar __assign=undefined&&undefined.__assign||function(){return(__assign=Object.assign||function(t){for(var i,a=1,s=arguments.length;a<s;a++)for(var n in i=arguments[a])Object.prototype.hasOwnProperty.call(i,n)&&(t[n]=i[n]);return t}).apply(this,arguments)},CountUp=function(){function t(t,i,a){var s=this;this.target=t,this.endVal=i,this.options=a,this.version=\"2.0.5\",this.defaults={startVal:0,decimalPlaces:0,duration:2,useEasing:!0,useGrouping:!0,smartEasingThreshold:999,smartEasingAmount:333,separator:\",\",decimal:\".\",prefix:\"\",suffix:\"\"},this.finalEndVal=null,this.useEasing=!0,this.countDown=!1,this.error=\"\",this.startVal=0,this.paused=!0,this.count=function(t){s.startTime||(s.startTime=t);var i=t-s.startTime;s.remaining=s.duration-i,s.useEasing?s.countDown?s.frameVal=s.startVal-s.easingFn(i,0,s.startVal-s.endVal,s.duration):s.frameVal=s.easingFn(i,s.startVal,s.endVal-s.startVal,s.duration):s.countDown?s.frameVal=s.startVal-(s.startVal-s.endVal)*(i/s.duration):s.frameVal=s.startVal+(s.endVal-s.startVal)*(i/s.duration),s.countDown?s.frameVal=s.frameVal<s.endVal?s.endVal:s.frameVal:s.frameVal=s.frameVal>s.endVal?s.endVal:s.frameVal,s.frameVal=Math.round(s.frameVal*s.decimalMult)/s.decimalMult,s.printValue(s.frameVal),i<s.duration?s.rAF=requestAnimationFrame(s.count):null!==s.finalEndVal?s.update(s.finalEndVal):s.callback&&s.callback()},this.formatNumber=function(t){var i,a,n,e,r,o=t<0?\"-\":\"\";if(i=Math.abs(t).toFixed(s.options.decimalPlaces),n=(a=(i+=\"\").split(\".\"))[0],e=a.length>1?s.options.decimal+a[1]:\"\",s.options.useGrouping){r=\"\";for(var l=0,h=n.length;l<h;++l)0!==l&&l%3==0&&(r=s.options.separator+r),r=n[h-l-1]+r;n=r}return s.options.numerals&&s.options.numerals.length&&(n=n.replace(/[0-9]/g,function(t){return s.options.numerals[+t]}),e=e.replace(/[0-9]/g,function(t){return s.options.numerals[+t]})),o+s.options.prefix+n+e+s.options.suffix},this.easeOutExpo=function(t,i,a,s){return a*(1-Math.pow(2,-10*t/s))*1024/1023+i},this.options=__assign(__assign({},this.defaults),a),this.formattingFn=this.options.formattingFn?this.options.formattingFn:this.formatNumber,this.easingFn=this.options.easingFn?this.options.easingFn:this.easeOutExpo,this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.endVal=this.validateValue(i),this.options.decimalPlaces=Math.max(this.options.decimalPlaces),this.decimalMult=Math.pow(10,this.options.decimalPlaces),this.resetDuration(),this.options.separator=String(this.options.separator),this.useEasing=this.options.useEasing,\"\"===this.options.separator&&(this.options.useGrouping=!1),this.el=\"string\"==typeof t?document.getElementById(t):t,this.el?this.printValue(this.startVal):this.error=\"[CountUp] target is null or undefined\"}return t.prototype.determineDirectionAndSmartEasing=function(){var t=this.finalEndVal?this.finalEndVal:this.endVal;this.countDown=this.startVal>t;var i=t-this.startVal;if(Math.abs(i)>this.options.smartEasingThreshold){this.finalEndVal=t;var a=this.countDown?1:-1;this.endVal=t+a*this.options.smartEasingAmount,this.duration=this.duration/2}else this.endVal=t,this.finalEndVal=null;this.finalEndVal?this.useEasing=!1:this.useEasing=this.options.useEasing},t.prototype.start=function(t){this.error||(this.callback=t,this.duration>0?(this.determineDirectionAndSmartEasing(),this.paused=!1,this.rAF=requestAnimationFrame(this.count)):this.printValue(this.endVal))},t.prototype.pauseResume=function(){this.paused?(this.startTime=null,this.duration=this.remaining,this.startVal=this.frameVal,this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count)):cancelAnimationFrame(this.rAF),this.paused=!this.paused},t.prototype.reset=function(){cancelAnimationFrame(this.rAF),this.paused=!0,this.resetDuration(),this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.printValue(this.startVal)},t.prototype.update=function(t){cancelAnimationFrame(this.rAF),this.startTime=null,this.endVal=this.validateValue(t),this.endVal!==this.frameVal&&(this.startVal=this.frameVal,this.finalEndVal||this.resetDuration(),this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count))},t.prototype.printValue=function(t){var i=this.formattingFn(t);\"INPUT\"===this.el.tagName?this.el.value=i:\"text\"===this.el.tagName||\"tspan\"===this.el.tagName?this.el.textContent=i:this.el.innerHTML=i},t.prototype.ensureNumber=function(t){return\"number\"==typeof t&&!isNaN(t)},t.prototype.validateValue=function(t){var i=Number(t);return this.ensureNumber(i)?i:(this.error=\"[CountUp] invalid start or end value: \"+t,null)},t.prototype.resetDuration=function(){this.startTime=null,this.duration=1e3*Number(this.options.duration),this.remaining=this.duration},t}();\n\n//# sourceURL=webpack:///./node_modules/countup.js/dist/countUp.min.js?");

/***/ }),

/***/ "./public/javascripts/index/screen.js":
/*!********************************************!*\
  !*** ./public/javascripts/index/screen.js ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var _common_dataprocess__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/dataprocess */ \"./public/javascripts/common/dataprocess.js\");\n/* harmony import */ var _common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/ajaxcommand */ \"./public/javascripts/common/ajaxcommand.js\");\n/* harmony import */ var _modules_charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/charts */ \"./public/javascripts/modules/charts.js\");\n/* harmony import */ var countup_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! countup.js */ \"./node_modules/countup.js/dist/countUp.min.js\");\n\r\n\r\n\r\n\r\n\r\n$(function() {\r\n    let mapState = true;\r\n    let particleClass = ''; // 当前粒子色彩样式名称\r\n    let nowTrendMsg = null;\r\n\r\n    /**\r\n     * 地区疫情动态滚动效果\r\n     * \r\n     * @method myScroll\r\n     * \r\n     * @param {Object} 配置信息\r\n     */\r\n    $.fn.myScroll = function(options) {\r\n        let defaults = {\r\n            speed: 50,\r\n            rowHeight: 21 // 错误的行高会影响效果\r\n        };\r\n        let opts = $.extend({}, defaults, options);\r\n        let intId = [];\r\n        // 动效配置\r\n        function marquee(obj, step) {\r\n            obj.find(\".scrollOption\").animate({\r\n                marginTop: '-=1'\r\n            }, 0, function() {\r\n                let s = Math.abs(parseInt($(this).css(\"margin-top\")));\r\n                if (s >= step) {\r\n                    $(this).find(\"li\").slice(0, 1).appendTo($(this));\r\n                    $(this).css(\"margin-top\", 0);\r\n                }\r\n            });\r\n        }\r\n        // 流程配置\r\n        this.each(function(i) {\r\n            let sh = opts[\"rowHeight\"];\r\n            let speed = opts[\"speed\"];\r\n            let _this = $(this);\r\n            intId[i] = setInterval(function() {\r\n                if (_this.find(\".scrollOption\").height() <= _this.height()) {\r\n                    clearInterval(intId[i]);\r\n                } else {\r\n                    marquee(_this, sh);\r\n                }\r\n            }, speed);\r\n            _this.hover(function() {\r\n                clearInterval(intId[i]);\r\n            }, function() {\r\n                intId[i] = setInterval(function() {\r\n                    if (_this.find(\".scrollOption\").height() <= _this.height()) {\r\n                        clearInterval(intId[i]);\r\n                    } else {\r\n                        marquee(_this, sh);\r\n                    }\r\n                }, speed);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 添加实时时间\r\n     * \r\n     * @method realTime\r\n     */\r\n    let realTime = function() {\r\n        let date = new Date();\r\n        let year = date.getFullYear();\r\n        let mon = date.getMonth() + 1;\r\n        let da = date.getDate();\r\n        let h = date.getHours();\r\n        let m = date.getMinutes();\r\n        let s = date.getSeconds();\r\n        let d = document.getElementById('Date');\r\n        let time1 = year + '&ensp;年&ensp;' + (mon < 10 ? '0' : '') + mon + '&ensp;月&ensp;' + (da < 10 ? '0' : '') + da + '&ensp;日&ensp;';\r\n        let time2 = (h < 10 ? '0' : '') + h + ' : ' + (m < 10 ? '0' : '') + m + ' : ' + (s < 10 ? '0' : '') + s;\r\n        $(\".time1\").empty().append(time1);\r\n        $(\".time2\").empty().append(time2);\r\n    }\r\n    realTime();\r\n    setInterval(realTime, 1000);\r\n\r\n    /**\r\n     * 移除加载动画\r\n     * \r\n     * @method removeLoading\r\n     */\r\n    function removeLoading() {\r\n        $('#loadAn').fadeOut(() => {\r\n            $('#loadAn').remove();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 添加国家疫情状态数据到滚屏中\r\n     * \r\n     * @method addCouStaMsg\r\n     * \r\n     * @param {Array} data \r\n     */\r\n    function addCouStaMsg(data) {\r\n        $(\".scrollOption\").empty();\r\n        for (const item in data) {\r\n            $(\".scrollOption\").append(`\r\n            <li>` +\r\n                \"<div class='countryItem' date-id='\" + data[item]['id'] + \"'><a href='javascript:void(0);' onclick='countryItemClickAction()'>\" + data[item]['provinceName'] + \"</a></div>\" +\r\n                `<div><span>` + data[item]['currentConfirmedCount'] + `</span></div>\r\n                <div><span>` + data[item]['curedCount'] + `</span></div>\r\n                <div><span>` + data[item]['deadCount'] + `</span></div>\r\n            </li>`\r\n            );\r\n        }\r\n        removeLoading();\r\n    }\r\n\r\n    /**\r\n     * 单击国家时候的触法事件\r\n     * \r\n     * @method countryItemClickAction\r\n     */\r\n    window.countryItemClickAction = function() {\r\n        $('.countryItem').click((e) => {\r\n            let fieldID = $(e.currentTarget).attr('date-id'); // 获取当前触法对象的id值\r\n            $('.countryItem').unbind('click');\r\n\r\n            // 数据过滤\r\n            let filterData = [];\r\n            for (const item in nowTrendMsg) {\r\n                if (nowTrendMsg[item]['id'] === parseInt(fieldID)) {\r\n                    filterData.push(nowTrendMsg[item]);\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 添加最新疫情资讯\r\n     * \r\n     * @method addNews\r\n     * \r\n     * @param {Array} data \r\n     */\r\n    function addNews(data) {\r\n        let temporaryData = JSON.parse(JSON.stringify(data));\r\n        $('.nowNews').empty();\r\n        for (const item in temporaryData) {\r\n            let newsTemplate = `\r\n                <a href=\"` + temporaryData[item]['sourceUrl'] + `\" target=\"_blank\">\r\n                    <div class=\"newsSty\">\r\n                        <div id=\"abcdef\" class=\"newsTitle\">` + temporaryData[item]['pubDate'] + `&emsp;&emsp;` + temporaryData[item]['infoSource'] + `</div>\r\n                        <div class=\"newsContent\">` + temporaryData[item]['summary'] + `</div>\r\n                    </div>\r\n                <a>\r\n            `;\r\n            $('.nowNews').append(newsTemplate);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置疫情统计信息显示数据\r\n     * \r\n     * @method setStatisticsNumber\r\n     * \r\n     * @param {Array} sourceData 数据，需提前排除无用数据，默认首条记录\r\n     */\r\n    function setStatisticsNumber(sourceData) {\r\n        $('.staItemNum').empty();\r\n        let n1 = new countup_js__WEBPACK_IMPORTED_MODULE_3__[\"CountUp\"]('confirmedCountNumber', sourceData[0]['confirmedCount'], { duration: 2 });\r\n        n1.start();\r\n        let n2 = new countup_js__WEBPACK_IMPORTED_MODULE_3__[\"CountUp\"]('currentConfirmedCountNumber', sourceData[0]['currentConfirmedCount'], { duration: 2.5 });\r\n        n2.start();\r\n        let n3 = new countup_js__WEBPACK_IMPORTED_MODULE_3__[\"CountUp\"]('curedCountNumber', sourceData[0]['curedCount'], { duration: 3 });\r\n        n3.start();\r\n        let n4 = new countup_js__WEBPACK_IMPORTED_MODULE_3__[\"CountUp\"]('deadCountNumber', sourceData[0]['deadCount'], { duration: 3.5 });\r\n        n4.start();\r\n        let n5 = new countup_js__WEBPACK_IMPORTED_MODULE_3__[\"CountUp\"]('confirmedIncrCountNumber', sourceData[0]['confirmedIncr'], { duration: 4 });\r\n        n5.start();\r\n    }\r\n\r\n    /**\r\n     * 板块触发效果\r\n     * \r\n     * @method sectionHoverAction\r\n     */\r\n    function sectionHoverAction() {\r\n        $('.hoverAction').hover(function() {\r\n            $(this).addClass('prominent hoveractive');\r\n            $(\".hoverAction:not(.hoveractive)\").addClass('vague');\r\n        }, function() {\r\n            $(this).removeClass('prominent hoveractive');\r\n            $(\".hoverAction:not(.hoveractive)\").removeClass('vague');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 统计版块内部滑入滑出触法效果\r\n     * \r\n     * @method staboxHoverAction\r\n     */\r\n    function staboxHoverAction() {\r\n        $('.staItem').hover(function() {\r\n            $(\".staItem\").addClass('staItemHover');\r\n            $(this).removeClass('staItemHover');\r\n        }, function() {\r\n            $('.staItem').removeClass('staItemHover');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 统计板块内部点击触法效果\r\n     * \r\n     * @method staboxClickAction\r\n     */\r\n    function staboxClickAction() {\r\n        $('.staItem').click(function(e) {\r\n            let fieldName = $(this).attr('data-item');\r\n            let option = {\r\n                tooltipTitle: 'provinceName',\r\n                showField: fieldName,\r\n            };\r\n\r\n            switch (fieldName) {\r\n                case 'confirmedCount':\r\n                    {\r\n                        option.bubbleFillColor = '#FFC904';\r\n                        cgParticleColor('particleColor-A');\r\n                        break;\r\n                    }\r\n                case 'currentConfirmedCount':\r\n                    {\r\n                        option.bubbleFillColor = '#F92F2C';\r\n                        cgParticleColor('particleColor-B');\r\n                        break;\r\n                    }\r\n                case 'curedCount':\r\n                    {\r\n                        option.bubbleFillColor = '#57CEA1';\r\n                        cgParticleColor('particleColor-C');\r\n                        break;\r\n                    }\r\n                case 'deadCount':\r\n                    {\r\n                        option.bubbleFillColor = '#9FBDF5';\r\n                        cgParticleColor('particleColor-D');\r\n                        break;\r\n                    }\r\n                default:\r\n                    {\r\n                        option.bubbleFillColor = '#F92F2C';\r\n                        cgParticleColor('particleColor-A');\r\n                    }\r\n            }\r\n\r\n            if (fieldName) {\r\n                updateMap(nowTrendMsg, option);\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    let mapIsMax = 0;\r\n\r\n    /**\r\n     * 放大地图滑条点击触发效果\r\n     * \r\n     * @method maxMapAciton\r\n     */\r\n    function maxMapAciton() {\r\n        $('#maxMapAciton').on('click', function() {\r\n\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 生成粒子效果\r\n     * \r\n     * @method addParticle\r\n     */\r\n    function addParticle() {\r\n        for (let index = 1; index < 100; index++) {\r\n            $('.particleBox').append(`\r\n        <div class=\"circle-container\">\r\n        <div class=\"circle\"></div>\r\n        </div>`);\r\n        }\r\n\r\n        cgParticleColor('particleColor-B');\r\n    }\r\n\r\n    /**\r\n     * 改变粒子色彩\r\n     * \r\n     * @method cgParticleColor\r\n     * \r\n     * @param {String} className \r\n     */\r\n    function cgParticleColor(className) {\r\n        $('.circle').removeClass(particleClass);\r\n        particleClass = className;\r\n        $('.circle').addClass(particleClass);\r\n    }\r\n\r\n    /**\r\n     * 地图重载\r\n     * \r\n     * @method updateMap\r\n     * \r\n     * @param {Array} data 疫情数据\r\n     * @param {Object} option 图表配置信息\r\n     */\r\n    function updateMap(data, option) {\r\n        if (mapState) {\r\n            mapState = false;\r\n            $('#map').fadeOut(() => {\r\n                $('#map').empty();\r\n                $('#map').show();\r\n                Object(_modules_charts__WEBPACK_IMPORTED_MODULE_2__[\"bubbleMap\"])(_common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"mapmakerMsg\"], data, 'map', option);\r\n                mapState = true;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化近30天国家及地区疫情动态配置\r\n     * \r\n     * @method trend30Initialize\r\n     */\r\n    async function trend30Initialize() {\r\n        let msg = null;\r\n        // 获取近30日国家疫情动态\r\n        await _common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"getNcov30day\"]();\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化近30天每天各洲疫情统计数据\r\n     * \r\n     * @method continents30Initialize\r\n     */\r\n    async function continents30Initialize() {\r\n        let msg = null;\r\n        // 获取近30日每天各洲疫情统计数据\r\n        await _common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"getConsta30day\"]();\r\n\r\n        msg = _common_dataprocess__WEBPACK_IMPORTED_MODULE_0__[\"weekCondition\"](_common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"consta30dayMsg\"]);\r\n        Object(_modules_charts__WEBPACK_IMPORTED_MODULE_2__[\"cBarCurrentConfirmed\"])(msg, 'stackedBarChart');\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化地图配置\r\n     * \r\n     * @method mapInitialize\r\n     */\r\n    async function mapInitialize() {\r\n        let msg = null;\r\n        // 获取世界地图绘制数据\r\n        await _common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"getWorldJson\"]();\r\n\r\n        // 初始化国家及地区疫情数据\r\n        await trend30Initialize();\r\n        // 获取最新国家及地区疫情数据时间戳\r\n        let reqTime = await _common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"getMaxtimeoftrend\"]();\r\n\r\n        nowTrendMsg = _common_dataprocess__WEBPACK_IMPORTED_MODULE_0__[\"timestampFiltrate\"](_common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"ncov30dayMsg\"], reqTime[0]['reqTime'], 'same'); // 过滤数据只保留最新数据\r\n        updateMap(nowTrendMsg, {\r\n            tooltipTitle: 'provinceName',\r\n            showField: 'currentConfirmedCount',\r\n            bubbleFillColor: '#F92F2C'\r\n        });\r\n\r\n        nowTrendMsg = _common_dataprocess__WEBPACK_IMPORTED_MODULE_0__[\"descData\"](nowTrendMsg, 'currentConfirmedCount');\r\n        addCouStaMsg(nowTrendMsg);\r\n        $('.scrollBox').myScroll();\r\n    }\r\n\r\n    /**\r\n     * 初始化世界疫情统计配置\r\n     * \r\n     * @method statisticsInitialize\r\n     */\r\n    async function statisticsInitialize() {\r\n        let msg = null;\r\n        // 获取近30日全球疫情统计数据\r\n        await _common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"getSta30day\"]();\r\n\r\n        msg = _common_dataprocess__WEBPACK_IMPORTED_MODULE_0__[\"weekCondition\"](_common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"sta30dayMsg\"]);\r\n        Object(_modules_charts__WEBPACK_IMPORTED_MODULE_2__[\"cTendencyTrendFewDays\"])(msg, \"tendencyChart\");\r\n\r\n        msg = _common_dataprocess__WEBPACK_IMPORTED_MODULE_0__[\"descData\"](_common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"sta30dayMsg\"], 'reqTime');\r\n        msg[0]['confirmedIncr'] = msg[0]['confirmedCount'] - msg[1]['confirmedCount'];\r\n        msg = msg[0];\r\n        setStatisticsNumber([msg]);\r\n\r\n        msg = _common_dataprocess__WEBPACK_IMPORTED_MODULE_0__[\"percentGeneration\"]([msg]);\r\n        Object(_modules_charts__WEBPACK_IMPORTED_MODULE_2__[\"cDoughnutStatistics\"])(msg, 'doughnutChart');\r\n\r\n    }\r\n\r\n    /**\r\n     * 初始化最新疫情资讯\r\n     * \r\n     * @method newsInitialize\r\n     */\r\n    async function newsInitialize() {\r\n        let msg = null;\r\n        msg = await _common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"getNewsnewest\"]();\r\n        addNews(msg);\r\n\r\n    }\r\n\r\n    // 效果\r\n    sectionHoverAction();\r\n    staboxHoverAction();\r\n    staboxClickAction();\r\n    addParticle();\r\n\r\n    // 数据初始化操作\r\n    mapInitialize();\r\n    statisticsInitialize();\r\n    newsInitialize();\r\n    _common_ajaxcommand__WEBPACK_IMPORTED_MODULE_1__[\"getEnname\"]();\r\n    continents30Initialize();\r\n\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\nwindow.onload = function() {\r\n    /*\r\n     * 背景音乐\r\n     */\r\n    let music = document.getElementById(\"bgMusic\");\r\n    music.volume = 0.1; // 音量控制\r\n    $(\"#musicEvent\").on(\"click\", function() {\r\n        if (music.paused) {\r\n            music.play();\r\n        } else {\r\n            music.pause();\r\n        }\r\n        return false;\r\n    });\r\n\r\n\r\n\r\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./public/javascripts/index/screen.js?");

/***/ }),

/***/ "./public/javascripts/modules/charts.js":
/*!**********************************************!*\
  !*** ./public/javascripts/modules/charts.js ***!
  \**********************************************/
/*! exports provided: cBarCurrentConfirmed, cDoughnutStatistics, cTendencyTrendFewDays, createWorldMap, bubbleMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cBarCurrentConfirmed\", function() { return cBarCurrentConfirmed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cDoughnutStatistics\", function() { return cDoughnutStatistics; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cTendencyTrendFewDays\", function() { return cTendencyTrendFewDays; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createWorldMap\", function() { return createWorldMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"bubbleMap\", function() { return bubbleMap; });\n/* harmony import */ var _antv_g2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @antv/g2 */ \"./node_modules/@antv/g2/esm/index.js\");\n/* harmony import */ var _antv_data_set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @antv/data-set */ \"./node_modules/@antv/data-set/build/data-set.js\");\n/* harmony import */ var _antv_data_set__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_antv_data_set__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _common_dataprocess__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/dataprocess */ \"./public/javascripts/common/dataprocess.js\");\n\r\n\r\n\r\n/**\r\n * 生成各洲现有确诊周比叠加柱状图\r\n * \r\n * @method cBarCurrentConfirmed\r\n * \r\n * @param {Array} data 疫情数据，需提前排除无用数据\r\n * @param {String} containerName 容器名称\r\n */\r\nfunction cBarCurrentConfirmed(data, containerName) {\r\n    let temporaryData = JSON.parse(JSON.stringify(data));\r\n\r\n    // 数据处理\r\n    let disData = _common_dataprocess__WEBPACK_IMPORTED_MODULE_2__[\"ascData\"](temporaryData, 'reqTime');\r\n    _common_dataprocess__WEBPACK_IMPORTED_MODULE_2__[\"ascData\"](disData, 'continents');\r\n    const chart = new _antv_g2__WEBPACK_IMPORTED_MODULE_0__[\"Chart\"]({\r\n        container: containerName,\r\n        autoFit: true,\r\n    });\r\n    chart.data(data);\r\n    chart.scale('confirmedCount', {\r\n\r\n    });\r\n    chart.axis('date', {\r\n        tickLine: null,\r\n    });\r\n    chart.axis('confirmedCount', {\r\n        label: {\r\n            formatter: text => {\r\n                return text.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\r\n            }\r\n        },\r\n\r\n    });\r\n    chart.legend({\r\n        position: 'bottom',\r\n    });\r\n    chart.tooltip({\r\n        shared: true,\r\n        showMarkers: false,\r\n    });\r\n    chart.interaction('active-region');\r\n    chart\r\n        .interval()\r\n        .adjust('stack')\r\n        .position('date*confirmedCount')\r\n        .color('continents', ['#00f7ff', '#00e3ff', '#00cdff', '#00b7ff', '#00a0fd', '#0087f1', '#106cde']);\r\n\r\n    chart.render();\r\n\r\n};\r\n\r\n/**\r\n * 生成疫情动态环形图\r\n * \r\n * @method cDoughnutStatistics\r\n * \r\n * @param {Array} data 疫情数据，需提前排除无用数据,并比率计算\r\n * @param {String} containerName 容器名称\r\n */\r\nfunction cDoughnutStatistics(data, containerName) {\r\n    let temporaryData = JSON.parse(JSON.stringify(data));\r\n    const chart = new _antv_g2__WEBPACK_IMPORTED_MODULE_0__[\"Chart\"]({\r\n        container: containerName,\r\n        autoFit: true,\r\n    });\r\n    chart.data(temporaryData);\r\n    chart.scale('percent', {\r\n        formatter: (val) => {\r\n            val = val * 100 + '%';\r\n            return val;\r\n        },\r\n    });\r\n    chart.coordinate('theta', {\r\n        radius: 0.75,\r\n        innerRadius: 0.6,\r\n    });\r\n    chart.tooltip({\r\n        showTitle: false,\r\n        showMarkers: false,\r\n    });\r\n    chart\r\n        .interval()\r\n        .adjust('stack')\r\n        .position('percent')\r\n        .color('item')\r\n        .label('percent',\r\n            (percent) => {\r\n                return {\r\n                    content: (temporaryData) => {\r\n                        return `${temporaryData.item} : ${parseInt(percent * 100)}%`;\r\n                    },\r\n                };\r\n            }, {\r\n                offset: 15,\r\n                style: {\r\n                    fontSize: 12,\r\n                    fill: '#bfbfbf',\r\n                },\r\n            }\r\n        )\r\n        .tooltip('item*percent', (item, percent) => {\r\n            percent = parseInt(percent * 100) + '%';\r\n            return {\r\n                name: item,\r\n                value: percent,\r\n            };\r\n        });\r\n    chart.interaction('element-active');\r\n    chart.interaction('element-single-selected');\r\n    chart.render();\r\n}\r\n\r\n/**\r\n * 生成疫情动态曲线折线图\r\n * \r\n * @method cTendencyTrendFewDays\r\n * \r\n * @param {Array} data 显示的数据，需提前排除无用数据\r\n * @param {String} containerName 容器名称\r\n */\r\nfunction cTendencyTrendFewDays(data, containerName) {\r\n    let temporaryData = JSON.parse(JSON.stringify(data));\r\n    // 数据处理\r\n    let disData = _common_dataprocess__WEBPACK_IMPORTED_MODULE_2__[\"ascData\"](temporaryData, 'reqTime');\r\n    let claKeyName = \"situation\";\r\n    let claValKeyName = \"quantity\";\r\n    let claConf = {\r\n        typeInfo: [{\r\n            keyName: claKeyName,\r\n            keyValue: '现存确诊',\r\n            valKeyName: claValKeyName,\r\n            correspondingKey: 'currentConfirmedCount',\r\n        }, {\r\n            keyName: claKeyName,\r\n            keyValue: '累计治愈',\r\n            valKeyName: claValKeyName,\r\n            correspondingKey: 'curedCount',\r\n        }, {\r\n            keyName: claKeyName,\r\n            keyValue: '累计死亡',\r\n            valKeyName: claValKeyName,\r\n            correspondingKey: 'deadCount',\r\n        }, ],\r\n        saveKey: ['date']\r\n    };\r\n    disData = _common_dataprocess__WEBPACK_IMPORTED_MODULE_2__[\"dataClassification\"](disData, claConf);\r\n    // 配置信息\r\n    const chart = new _antv_g2__WEBPACK_IMPORTED_MODULE_0__[\"Chart\"]({\r\n        container: containerName,\r\n        autoFit: true,\r\n    });\r\n    chart.data(disData);\r\n    chart.scale(claValKeyName, {\r\n        // type: 'pow',\r\n        nice: true\r\n    });\r\n    chart.tooltip({\r\n        showCrosshairs: true,\r\n        shared: true,\r\n    });\r\n    chart.legend({\r\n        position: \"bottom\",\r\n    });\r\n    chart.axis(claValKeyName, {\r\n        label: {\r\n            formatter: text => {\r\n                return text.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1,');\r\n            }\r\n        },\r\n    });\r\n    chart\r\n        .line()\r\n        .position('date*' + claValKeyName)\r\n        .color(claKeyName);\r\n    chart\r\n        .point()\r\n        .position('date*' + claValKeyName)\r\n        .color(claKeyName)\r\n        .shape('circle');\r\n    chart.render();\r\n}\r\n\r\n/**\r\n * 生成世界地图\r\n * \r\n * @method createWorldMap\r\n * \r\n * @param {Object} worldData 地图绘制数据\r\n * @param {String} containerName 容器名称\r\n * @param {Object} option 图表配置信息\r\n * \r\n * @return {Object} 国家经纬度视图数据（G2 WorldGeo）\r\n */\r\nfunction createWorldMap(worldData, containerName, option) {\r\n    const ds = new _antv_data_set__WEBPACK_IMPORTED_MODULE_1___default.a();\r\n\r\n    // 基本配置信息\r\n    const chart = new _antv_g2__WEBPACK_IMPORTED_MODULE_0__[\"Chart\"]({\r\n        container: containerName,\r\n        autoFit: true,\r\n    });\r\n    chart.scale({\r\n        longitude: {\r\n            sync: true,\r\n        },\r\n        latitude: {\r\n            sync: true,\r\n        },\r\n    });\r\n    chart.axis(false);\r\n    chart.legend(false);\r\n    chart.tooltip({\r\n        showTitle: true,\r\n        showMarkers: false,\r\n        title: option['tooltipTitle']\r\n    });\r\n\r\n    // 地图配置\r\n    const worldGeo = ds.createView().source(worldData, {\r\n        type: 'GeoJSON',\r\n    });\r\n    const mapView = chart.createView();\r\n    mapView.changeData(worldGeo.rows);\r\n    mapView\r\n        .polygon()\r\n        .position('longitude*latitude')\r\n        .style({\r\n            fill: 'l(90) 0:rgba(75,36,118,1) 1:rgba(75,36,118,1)',\r\n            lineWidth: 1,\r\n            stroke: 'rgba(233,216,246,.8)',\r\n            shadowColor: 'rgba(0,0,0,.06)',\r\n            shadowOffsetX: 5,\r\n            shadowOffsetY: 20,\r\n        })\r\n        .tooltip(false)\r\n        .animate({\r\n            appear: {\r\n                animation: 'grow-in-xy',\r\n                duration: 300\r\n            }\r\n        });\r\n    chart.render();\r\n}\r\n\r\n/**\r\n * 疫情动态气泡地图\r\n * \r\n * @method bubbleMap\r\n * \r\n * @param {Object} worldData 地图绘制数据\r\n * @param {Array} opData 疫情数据，需提前排除无用数据\r\n * @param {String} containerName 容器名称\r\n * @param {Object} option 图表配置信息\r\n */\r\nfunction bubbleMap(worldData, opData, containerName, option) {\r\n    let temporaryData = JSON.parse(JSON.stringify(opData));\r\n    let worldMapData = JSON.parse(JSON.stringify(worldData));\r\n\r\n    const ds = new _antv_data_set__WEBPACK_IMPORTED_MODULE_1___default.a();\r\n\r\n    // 基本配置信息\r\n    const chart = new _antv_g2__WEBPACK_IMPORTED_MODULE_0__[\"Chart\"]({\r\n        container: containerName,\r\n        autoFit: true,\r\n    });\r\n    chart.scale({\r\n        longitude: {\r\n            sync: true,\r\n        },\r\n        latitude: {\r\n            sync: true,\r\n        },\r\n    });\r\n    chart.axis(false);\r\n    chart.legend(false);\r\n    chart.tooltip({\r\n        showTitle: true,\r\n        showMarkers: false,\r\n        title: option['tooltipTitle']\r\n    });\r\n\r\n    // 地图配置\r\n    const worldGeo = ds.createView().source(worldMapData, {\r\n        type: 'GeoJSON',\r\n    });\r\n    const mapView = chart.createView();\r\n    mapView.changeData(worldGeo.rows);\r\n    mapView\r\n        .polygon()\r\n        .position('longitude*latitude')\r\n        .style({\r\n            fill: 'l(90) 0:rgba(75,36,118,1) 1:rgba(75,36,118,1)',\r\n            lineWidth: 1,\r\n            stroke: 'rgba(233,216,246,.8)',\r\n            shadowColor: 'rgba(0,0,0,.06)',\r\n            shadowOffsetX: 5,\r\n            shadowOffsetY: 20,\r\n        })\r\n        .tooltip(false)\r\n        .animate({\r\n            appear: {\r\n                animation: 'grow-in-xy',\r\n                duration: 300\r\n            }\r\n        });\r\n    // 数据处理\r\n    const disData = ds.createView().source(temporaryData);\r\n    disData\r\n        .transform({\r\n            type: 'pick',\r\n            fields: ['date', 'provinceName', 'enName', 'confirmedCount', 'currentConfirmedCount', 'curedCount', 'deadCount']\r\n        })\r\n        .transform({\r\n            type: 'geo.centroid',\r\n            geoDataView: worldGeo,\r\n            field: 'enName',\r\n            as: ['longitude', 'latitude'],\r\n        });\r\n\r\n    // 显示数据配置\r\n    const showData = ds\r\n        .createView()\r\n        .source(disData)\r\n        .transform({\r\n            type: 'geo.centroid',\r\n            geoDataView: worldGeo,\r\n            field: 'enName',\r\n            as: ['longitude', 'latitude'],\r\n        });\r\n    const pointView = chart.createView();\r\n    pointView.data(showData.rows);\r\n    pointView\r\n        .point()\r\n        .position('longitude*latitude')\r\n        .color(option['bubbleFillColor'])\r\n        .shape(\"circle\")\r\n        .size(option['showField'], [5, 50])\r\n        .tooltip(\"confirmedCount*currentConfirmedCount*curedCount*deadCount\")\r\n        .style({\r\n            fillOpacity: .3,\r\n            stroke: option['bubbleFillColor']\r\n        });\r\n    pointView.scale({\r\n        cnName: {\r\n            alias: '国家'\r\n        },\r\n        confirmedCount: {\r\n            alias: '累计确诊'\r\n        },\r\n        currentConfirmedCount: {\r\n            alias: '现存确诊'\r\n        },\r\n        curedCount: {\r\n            alias: '累计治愈'\r\n        },\r\n        deadCount: {\r\n            alias: '累计死亡'\r\n        }\r\n    });\r\n    pointView.interaction('element-active');\r\n    chart.render();\r\n}\n\n//# sourceURL=webpack:///./public/javascripts/modules/charts.js?");

/***/ })

})